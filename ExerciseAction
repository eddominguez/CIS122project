import java.util.*;

public class ExerciseAction {

	// Scanner for user input
	static Scanner in = new Scanner(System.in);

	// Action Variables
	static int activityExercise = 1;

	// Player Variables
	private static int exerciseExperiencePts = 0;
	static int playerExerciseExpLevel = 1;

	// Array list to store all of the cooking options
	static List<String> exerciseOptions = new ArrayList<String>();

	public static void main(String[] args) {
			
			while (activityExercise > 0) {

				checkExpLevel(1);
				
				activityExercise = 0;
				break;
			}
	} // End main method

	// Method to check the player's cooking experience level and print their
	// selection options
	public static void checkExpLevel(int levelChecker) {
		
		// Level 1 exercise actions/exp
		String[] exerciseLevel1 = { "Stretching", "Walking", "Jogging" };

		// Level 2 exercise actions/exp
		String[] exerciseLevel2 = { "Bicycling", "Dancing", "Light-Weight Training" };

		// Level 3 exercise actions/exp
		String[] exerciseLevel3 = { "Plank", "Aerobic", "Squat" };

		// Level 4 exercise actions/exp
		String[] exerciseLevel4 = { "Push-up", "Squat With Dumbbell", "Dumbbell Curls and Presses" };

		while (levelChecker > 0) {
			if (playerExerciseExpLevel == 1) {

				// Prompt the player to choose how to exercise
				System.out.println("\nChoose how you want to exercise: ");

				// Make sure exerciseOptions list is clear before adding any items
				exerciseOptions.clear();

				// Add exerciseLevel1 array to exerciseOptions
				for (String options : exerciseLevel1) {
					exerciseOptions.add(options);
				}

				// Loop to list out the exerciseLevel1 array
				for (int i = 0; i < exerciseOptions.size(); i++) {
					System.out.println((i + 1) + ". " + exerciseOptions.get(i));
				}

				// Get the player's selection for input
				int input = in.nextInt();

				// If the player chooses toast
				if (input == exerciseOptions.indexOf("Stretching") + 1) {
					stretching();
					levelChecker = 0;
				}
				// If the player chooses cereal
				else if (input == exerciseOptions.indexOf("Walking") + 1) {
					walking();
					levelChecker = 0;
					// player cooks cereal get an addition 60 points and so on
					exerciseExperiencePts += 60;
				}
				// If the player chooses fruit
				else if (input == exerciseOptions.indexOf("Jogging") + 1) {
					jogging();
					levelChecker = 0;
					exerciseExperiencePts += 40;
				} else {
					System.out.println("### Invalid Input! ###");
					levelChecker = 1;
				}
			} else if (playerExerciseExpLevel == 2) {

				// Prompt the player to choose how to exercise
				System.out.println("\nChoose how you want to exercise: ");

				// Make sure exerciseOptions list is clear before adding any items
				exerciseOptions.clear();

				// Add cookingLevel2 array to exerciseOptions
				for (String options : exerciseLevel1) {
					exerciseOptions.add(options);
				}
				// Add cookingLevel2 array to exerciseOptions
				for (String options : exerciseLevel2) {
					exerciseOptions.add(options);
				}

				// Loop to list out the exerciseLevel2 array
				for (int i = 0; i < exerciseOptions.size(); i++) {
					System.out.println((i + 1) + ". " + exerciseOptions.get(i));
				}

				// Get the player's selection for input
				int input = in.nextInt();

				if (input == exerciseOptions.indexOf("Stretching") + 1) {
					stretching();
					levelChecker = 0;
				}
				else if (input == exerciseOptions.indexOf("Walking") + 1) {
					walking();
					levelChecker = 0;
				}
				else if (input == exerciseOptions.indexOf("Jogging") + 1) {
					jogging();
					levelChecker = 0;
				}
				else if (input == exerciseOptions.indexOf("Bicycling") + 1) {
					bicycling();
					levelChecker = 0;
				}
				else if (input == exerciseOptions.indexOf("Dancing") + 1) {
					dancing();
					levelChecker = 0;
				}
				else if (input == exerciseOptions.indexOf("Light-Weight Training") + 1) {
					lightWeightTraining();
					levelChecker = 0;
				} else {
					System.out.println("### Invalid Input! ###");
					levelChecker = 1;
				}
			} else if (playerExerciseExpLevel == 3) {

				// Prompt the player to choose how to exercise
				System.out.println("\nChoose how you want to exercise: ");

				// Make sure exerciseOptions list is clear before adding any items
				exerciseOptions.clear();

				// Add cookingLevel1 array to exerciseOptions
				for (String options : exerciseLevel1) {
					exerciseOptions.add(options);
				}
				// Add cookingLevel2 array to exerciseOptions
				for (String options : exerciseLevel2) {
					exerciseOptions.add(options);
				}
				// Add cookingLevel3 array to exerciseOptions
				for (String options : exerciseLevel3) {
					exerciseOptions.add(options);
				}

				// Loop to list out the exerciseLevel3 array
				for (int i = 0; i < exerciseOptions.size(); i++) {
					System.out.println((i + 1) + ". " + exerciseOptions.get(i));
				}

				// Get the player's selection for input
				int input = in.nextInt();

				if (input == exerciseOptions.indexOf("Stretching") + 1) {
					stretching();
					levelChecker = 0;
				}
				else if (input == exerciseOptions.indexOf("Walking") + 1) {
					walking();
					levelChecker = 0;
				}
				else if (input == exerciseOptions.indexOf("Jogging") + 1) {
					jogging();
					levelChecker = 0;
				}
				else if (input == exerciseOptions.indexOf("Bicycling") + 1) {
					bicycling();
					levelChecker = 0;
				}
				else if (input == exerciseOptions.indexOf("Dancing") + 1) {
					dancing();
					levelChecker = 0;
				}
				else if (input == exerciseOptions.indexOf("Light-Weight Training") + 1) {
					lightWeightTraining();
					levelChecker = 0;
				}
				else if (input == exerciseOptions.indexOf("Plank") + 1) {
					plank();
					levelChecker = 0;
				}
				else if (input == exerciseOptions.indexOf("Aerobic") + 1) {
					aerobic();
					levelChecker = 0;
				}
				else if (input == exerciseOptions.indexOf("Squat") + 1) {
					squat();
					levelChecker = 0;
				} else {
					System.out.println("### Invalid Input! ###");
					levelChecker = 1;
				}
			} else if (playerExerciseExpLevel >= 4) {

				// Prompt the player to choose how to exercise
				System.out.println("\nChoose how you want to exercise: ");

				// Make sure exerciseOptions list is clear before adding any items
				exerciseOptions.clear();

				// Add exerciseLevel1 array to exerciseOptions
				for (String options : exerciseLevel1) {
					exerciseOptions.add(options);
				}
				// Add exerciseLevel2 array to exerciseOptions
				for (String options : exerciseLevel2) {
					exerciseOptions.add(options);
				}
				// Add cookingLevel3 array to exerciseOptions
				for (String options : exerciseLevel3) {
					exerciseOptions.add(options);
				}
				// Add exerciseLevel4 array to exerciseOptions
				for (String options : exerciseLevel4) {
					exerciseOptions.add(options);
				}

				// Loop to list out the exerciseLevel4 array
				for (int i = 0; i < exerciseOptions.size(); i++) {
					System.out.println((i + 1) + ". " + exerciseOptions.get(i));
				}

				// Get the player's selection for input
				int input = in.nextInt();

				if (input == exerciseOptions.indexOf("Stretching") + 1) {
					stretching();
					levelChecker = 0;
				}
				else if (input == exerciseOptions.indexOf("Walking") + 1) {
					walking();
					levelChecker = 0;
				}
				else if (input == exerciseOptions.indexOf("Jogging") + 1) {
					jogging();
					levelChecker = 0;
				}
				else if (input == exerciseOptions.indexOf("Bicycling") + 1) {
					bicycling();
					levelChecker = 0;
				}
				else if (input == exerciseOptions.indexOf("Dancing") + 1) {
					dancing();
					levelChecker = 0;
				}
				else if (input == exerciseOptions.indexOf("Light-Weight Training") + 1) {
					lightWeightTraining();
					levelChecker = 0;
				}
				else if (input == exerciseOptions.indexOf("Plank") + 1) {
					plank();
					levelChecker = 0;
				}
				else if (input == exerciseOptions.indexOf("Aerobic") + 1) {
					aerobic();
					levelChecker = 0;
				}
				else if (input == exerciseOptions.indexOf("Squat") + 1) {
					squat();
					levelChecker = 0;
				}
				else if (input == exerciseOptions.indexOf("Push-up") + 1) {
					pushUp();
					levelChecker = 0;
				}
				else if (input == exerciseOptions.indexOf("Squat With Dumbbell") + 1) {
					squatWithDumbbell();
					levelChecker = 0;
				}
				else if (input == exerciseOptions.indexOf("Dumbbell Curls and Presses") + 1) {
					dumbbellCurlsAndPresses();
					levelChecker = 0;
				} else {
					System.out.println("### Invalid Input! ###");
					levelChecker = 1;
				}
			} else {
				System.out.println("### Invalid Input! ###");
				levelChecker = 1;
			}
		}
	} // End method checkExpLevel
	
	// Method to track Experience Points
	public static int addExerciseExp () {
		
		System.out.println("\nCurrent exerciseExperiencePts: " + exerciseExperiencePts);
		
		return exerciseExperiencePts;

	} // End addExerciseExp method
	
	// Method for leveling up skills
	public static void exerciseLevelUp () {
		
		int experiencePoints = exerciseExperiencePts;
		
		int[] currentLevel = { 1, 2, 3, 4};
		int[] requiredXP = { 100, 200, 300, 400};
		
   		if (experiencePoints >= requiredXP[0] && experiencePoints < requiredXP[1]) {
   			playerExerciseExpLevel = currentLevel[1];
   			System.out.println("\nYour current level is " + playerExerciseExpLevel + "\n");
   		}
   		else if (experiencePoints == requiredXP[1] && experiencePoints < requiredXP[2]) {
   			playerExerciseExpLevel = currentLevel[2];
   			System.out.println("\nYour current level is " + playerExerciseExpLevel + "\n");
   		}
    	else if (experiencePoints == requiredXP[2] && experiencePoints < requiredXP[3]) {
    		playerExerciseExpLevel = currentLevel[3];
    		System.out.println("\nYour current level is " + playerExerciseExpLevel + "\n");
    	}
    	else if (experiencePoints == requiredXP[3] && experiencePoints < requiredXP[4]) {
    		playerExerciseExpLevel = currentLevel[4];
    		System.out.println("\nYour current level is " + playerExerciseExpLevel + "\n");
    	}
    	else {
    		System.out.println("\nYour current level is " + playerExerciseExpLevel + "\n");
    	}
	} // End expLevelUp method


	// Method to stretch
	private static String stretching() {

		Random randomResponse = new Random();

		String[] stretchingMessage = {
				"You decide to some stretching.",
				"You are not very flexible so stretching is very difficult for you.",
				"You get really sore from stretching. You hope you feel better next time." };

		int randomValue = randomResponse.nextInt(stretchingMessage.length);

		String selectedMessage = stretchingMessage[randomValue];

		System.out.println(selectedMessage);

		// once a player has chosen cooking toast, experience we increase their
		// points by 40. += means increment the value, same as
		// cookingExperiencePts = cookingExperiencePts + 40;
		// just a short cut.
		if (randomValue == 0) {
			exerciseExperiencePts += 40;
		} else if (randomValue == 1) {
			exerciseExperiencePts += 20;
		} else {
			exerciseExperiencePts -= 0;
		}

		return selectedMessage;

	} // End method stretching

	// Method to go walking
	private static String walking() {
		Random randomResponse = new Random();

		String[] walkingMessage = {
				"You decide to go walking. You feel great!",
				"You get too distracted on your walk so it takes longer than usual.",
				"The weather is really bad so your walk is miserable."};

		int randomValue = randomResponse.nextInt(walkingMessage.length);

		String selectedMessage = walkingMessage[randomValue];

		System.out.println(selectedMessage);

		if (randomValue == 0) {
			exerciseExperiencePts += 40;
		} else if (randomValue == 1) {
			exerciseExperiencePts += 20;
		} else {
			exerciseExperiencePts -= 0;
		}

		return selectedMessage;
	} // End method walking

	// Method to go jogging
	private static String jogging() {
		Random randomResponse = new Random();

		String[] joggingMessage = {
				"You decide to go jogging. You feel great!",
				"You run out of breath quickly while jogging. You hope you can get through the workout",
				"The weather is really bad so your jog is miserable."};

		int randomValue = randomResponse.nextInt(joggingMessage.length);

		String selectedMessage = joggingMessage[randomValue];

		System.out.println(selectedMessage);

		if (randomValue == 0) {
			exerciseExperiencePts += 40;
		} else if (randomValue == 1) {
			exerciseExperiencePts += 20;
		} else {
			exerciseExperiencePts -= 0;
		}

		return selectedMessage;
	} // End method jogging

	// Method to ride a bicycle
	private static String bicycling() {
		Random randomResponse = new Random();

		String[] bicyclingMessage = {
				"You decide to go for a bike ride. You feel great!",
				"Your bike tires start getting flat near the end of your ride, you have to walk your bike home for part of it.",
				"The weather is really bad so your bike ride is miserable."};

		int randomValue = randomResponse.nextInt(bicyclingMessage.length);

		String selectedMessage = bicyclingMessage[randomValue];

		System.out.println(selectedMessage);

		if (randomValue == 0) {
			exerciseExperiencePts += 80;
		} else if (randomValue == 1) {
			exerciseExperiencePts += 40;
		} else {
			exerciseExperiencePts += 10;
		}

		return selectedMessage;
	} // End method bicycling

	// Method to dance
	private static String dancing() {
		Random randomResponse = new Random();
		
		String[] dancingMessage = {
				"You decide to dance. It makes you feel happy!",
				"You need to brush up on your dance moves a bit",
				"Your speaker dies while you are dancing. You get upset"};

		int randomValue = randomResponse.nextInt(dancingMessage.length);

		String selectedMessage = dancingMessage[randomValue];

		System.out.println(selectedMessage);

		if (randomValue == 0) {
			exerciseExperiencePts += 80;
		} else if (randomValue == 1) {
			exerciseExperiencePts += 30;
		} else {
			exerciseExperiencePts -= 0;
		}

		return selectedMessage;
	} // End method dancing

	// Method to do light weight training
	private static String lightWeightTraining() {
		Random randomResponse = new Random();

		String[] lightweighttrainingMessage = {
				"You decide to do some light-weight training. You feel great!",
				"You feel a little tired so your light-weight training felt difficult",
				"You get really sore from your light-weight training. You hope you feel better next time."};

		int randomValue = randomResponse.nextInt(lightweighttrainingMessage.length);

		String selectedMessage = lightweighttrainingMessage[randomValue];

		System.out.println(selectedMessage);

		if (randomValue == 0) {
			exerciseExperiencePts += 80;
		} else if (randomValue == 1) {
			exerciseExperiencePts += 40;
		} else {
			exerciseExperiencePts += 0;
		}

		return selectedMessage;
	} // End method lightWeightTraining

	// Method to do plank
	private static String plank() {
		Random randomResponse = new Random();

		String[] plankMessage = {
				"You decide to do a plank, and you are able to hold it for a long time",
				"You decide to do a plank, and you are only able to half as much time than usual",
				"You decide to do a plank, and you are not able to hold it very long at all"};

		int randomValue = randomResponse.nextInt(plankMessage.length);

		String selectedMessage = plankMessage[randomValue];

		System.out.println(selectedMessage);

		if (randomValue == 0) {
			exerciseExperiencePts += 100;
		} else if (randomValue == 1) {
			exerciseExperiencePts += 50;
		} else {
			exerciseExperiencePts += 15;
		}
		return selectedMessage;
	} // End method plank

	// Method to do aerobics
	private static String aerobic() {
		Random randomResponse = new Random();

		String[] aerobicMessage = {
				"You decide to do an aerobic workout. you feel great!",
				"You need to brush up on your aerobic exercises a bit.",
				"You were so tired that you couldn't finish your aerobic workout. You hope you feel better next time."};

		int randomValue = randomResponse.nextInt(aerobicMessage.length);

		String selectedMessage = aerobicMessage[randomValue];

		System.out.println(selectedMessage);

		if (randomValue == 0) {
			exerciseExperiencePts += 100;
		} else if (randomValue == 1) {
			exerciseExperiencePts += 50;
		} else {
			exerciseExperiencePts += 15;
		}
		return selectedMessage;
	} // End method aerobic

	// Method to do squats
	private static String squat() {
		Random randomResponse = new Random();

		String[] squatMessage = {
				"You decide to do some squats. You feel great!",
				"Your squats were harder than you thought they would be.",
				"You got really sore doing your squats. You hope you feel better next time."};

		int randomValue = randomResponse.nextInt(squatMessage.length);

		String selectedMessage = squatMessage[randomValue];

		System.out.println(selectedMessage);

		if (randomValue == 0) {
			exerciseExperiencePts += 100;
		} else if (randomValue == 1) {
			exerciseExperiencePts += 50;
		} else {
			exerciseExperiencePts += 15;
		}

		return selectedMessage;
	} // End method squat

	// Method to do push-ups
	private static String pushUp() {
		Random randomResponse = new Random();

		String[] pushupMessage = {
				"You decide to do push-ups, and you are able to do more than usual",
				"You decide to do push-ups, and you are only able to half as usual",
				"You decide to do push-ups, and you are not able do many this time. You hope you feel better next time."};

		int randomValue = randomResponse.nextInt(pushupMessage.length);

		String selectedMessage = pushupMessage[randomValue];

		System.out.println(selectedMessage);

		if (randomValue == 0) {
			exerciseExperiencePts += 150;
		} else if (randomValue == 1) {
			exerciseExperiencePts += 80;
		} else {
			exerciseExperiencePts += 40;
		}

		return selectedMessage;
	} // End method pushUp

	// Method to do squat with dumbbell
	private static String squatWithDumbbell() {
		Random randomResponse = new Random();

		String[] squatwithdumbbellMessage = {
				"You decide to do some squats with dumbells. You feel great!",
				"Your squats with dumbbells were harder than you thought they would be.",
				"You got really sore doing your squats with dumbbells. You hope you feel better next time."};

		int randomValue = randomResponse.nextInt(squatwithdumbbellMessage.length);

		String selectedMessage = squatwithdumbbellMessage[randomValue];

		System.out.println(selectedMessage);

		if (randomValue == 0) {
			exerciseExperiencePts += 150;
		} else if (randomValue == 1) {
			exerciseExperiencePts += 80;
		} else {
			exerciseExperiencePts += 20;
		}
		return selectedMessage;
	} // End method squatWithDumbbell

	// Method to do dumbbell curls and presses
	private static String dumbbellCurlsAndPresses() {
		Random randomResponse = new Random();

		String[] dumbbellcurlsandpressesMessage = {
				"You decide to do some dumbbell curls and presses, and you are able to do more than usual",
				"You decide to do some dumbbell curls and presses, and you are only able to half as usual",
				"You decide to do some dumbbell curls and presses, and you are not able do many this time. You hope you feel better next time."};

		int randomValue = randomResponse.nextInt(dumbbellcurlsandpressesMessage.length);

		String selectedMessage = dumbbellcurlsandpressesMessage[randomValue];

		System.out.println(selectedMessage);

		if (randomValue == 0) {
			exerciseExperiencePts += 150;
		} else if (randomValue == 1) {
			exerciseExperiencePts += 80;
		} else {
			exerciseExperiencePts += 50;
		}
		return selectedMessage;
	} // End method dumbbellCurlsAndPresses

} // End ExerciseAction class
